{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "BiznesRivoj",
    "description": "This is a simple documentation for biznesrivoj",
    "contact": {
      "name": "+998994287668"
    },
    "termsOfService": "http://swagger.io/terms/",
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3030",
  "tags": [
    {
      "name": "Auth",
      "description": "Authontication endpoints"
    },
    {
      "name": "Users",
      "description": "User enpoints"
    },
    {
      "name": "Articles",
      "description": "Article enpoints"
    }
  ],
  "definitions": {
    "AuthLogin": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserCreate": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "genderId": {
          "type": "integer",
          "format": "base64"
        },
        "image": {
          "type": "string"
        },
        "quote": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "roleId": {
          "type": "integer",
          "format": "base64"
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        }
      }
    },
    "ArticleCreate": {
      "type": "object",
      "properties": {
        "metaFields": {
          "type": "string"
        },
        "slug": {
          "type": "string",
          "description": "Slug should be unique"
        },
        "title_uz": {
          "type": "string"
        },
        "title_ru": {
          "type": "string"
        },
        "body_uz": {
          "type": "string"
        },
        "body_ru": {
          "type": "string"
        },
        "description_uz": {
          "type": "string"
        },
        "description_ru": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "base64"
          },
          "example": [
            1,
            2
          ]
        }
      }
    },
    "ArticleUpdate": {
      "type": "object",
      "properties": {
        "metaFields": {
          "type": "string"
        }
      }
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "summary": "User login endpoint",
        "description": "Returns a token and updates lastLoggedIn prop to user model",
        "tags": [
          "Auth"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Body",
            "description": "Exist phone number and respect password required",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "User logout endpoint",
        "description": "Only for updating User's lastLoggedOut prop",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/details": {
      "get": {
        "summary": "User details endpoint",
        "description": "Gets current user's details",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "All users endpoint",
        "description": "Gets all users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "User create endpoint",
        "description": "Creates a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "body",
            "name": "Body",
            "description": "Returns 201 status if is created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "A user endpoint",
        "description": "Gets a users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id of the user to get",
            "required": true,
            "type": "integer",
            "format": "base64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "User update endpoint",
        "description": "Updates the user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id of the user to update",
            "required": true,
            "type": "integer",
            "format": "base64"
          },
          {
            "in": "body",
            "name": "Body",
            "description": "You can send as many user props as you want to update at the same time",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Users delete endpoint",
        "description": "Delets a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id of the user to delete",
            "required": true,
            "type": "integer",
            "format": "base64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/{id}/articles": {
      "get": {
        "summary": "Articles of the user",
        "description": "Gers all articles belong to the user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id of the user to get",
            "required": true,
            "type": "integer",
            "format": "base64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/articles": {
      "get": {
        "summary": "All articles endpoint",
        "description": "Gets all articles",
        "tags": [
          "Articles"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Article create endpoint",
        "description": "Creates an article",
        "tags": [
          "Articles"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "body",
            "name": "Body",
            "description": "Returns 201 status if is created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/articles/{slug}": {
      "get": {
        "summary": "An article endpoint",
        "description": "Gets an article",
        "tags": [
          "Articles"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "description": "Slug of the article to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Article update endpoint",
        "description": "Updates the article",
        "tags": [
          "Articles"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "description": "Slug of the article to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Body",
            "description": "You can send as many article props as you want to update at the same time",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Articles delete endpoint",
        "description": "Delets an article",
        "tags": [
          "Articles"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Header",
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "description": "Slug of the article to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}